#! /usr/bin/python
# -*- coding: utf-8 -*-
#
# bin/make-dist-tarball
# Part of ‘python-daemon’, an implementation of PEP 3143.
#
# Copyright © 2007–2014 Ben Finney <ben+python@benfinney.id.au>
#
# This is free software: you may copy, modify, and/or distribute this work
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; version 3 of that license or any later version.
# No warranty expressed or implied. See the file ‘LICENSE.GPL-3’ for details.

""" Create the distribution tarball from VCS. """

from __future__ import (absolute_import, unicode_literals)

import sys
import os
import os.path
import tempfile
import shutil
import tarfile

import bzrlib
import bzrlib.workingtree
import bzrlib.export

parent_dir = os.path.dirname(os.path.dirname(__file__))
sys.path.insert(1, parent_dir)
from daemon import version_info

dist_name = "python-daemon"


workingtree = bzrlib.workingtree.WorkingTree.open_containing()[0]
branch = workingtree.branch
revision_tree = branch.basis_tree()


fromlist_expects_type = str
if sys.version_info < (3, 0):
    fromlist_expects_type = bytes

changelog_file_name = "ChangeLog"
changelog_file_path = os.path.join(parent_dir, changelog_file_name)
package_name = "daemon"
version_info_file_relpath = os.path.join(
        package_name, "version_info.json")
version_info_file_path = os.path.join(
        parent_dir, version_info_file_relpath)

version_info.update_version_info_file_if_needed(
        outfile_path=version_info_file_path,
        changelog_file_path=changelog_file_path)

package_module_fromlist = list(map(fromlist_expects_type, [
        '_metadata']))
package_module = __import__(package_name, fromlist=package_module_fromlist)
metadata = package_module._metadata


latest_version = version_info.read_version_info_from_file(
        version_info_file_path)
version_string = latest_version['version']

export_dir_name = "{name}-{version}".format(
        name=dist_name, version=version_string)
export_root_dir = tempfile.mkdtemp()
export_dir_path = os.path.join(export_root_dir, export_dir_name)
bzrlib.export.export(revision_tree, export_dir_path, format="dir")

version_info_file_export = os.path.join(
        export_dir_path, version_info_file_relpath)
shutil.copy(version_info_file_path, version_info_file_export)

# This program won't work outside the VCS branch; exclude it from the export.
this_program_export = os.path.join(
        export_dir_path, "bin", "make-dist-tarball")
os.remove(this_program_export)


def make_dist_tarball(tarball_path, tree_root):
    """ Create a named tarball from the specified directory tree. """

    save_curdir = os.path.abspath(os.path.curdir)

    tarball = tarfile.TarFile.gzopen(tarball_path, 'w')
    os.chdir(tree_root)
    tarball.add(export_dir_name)
    tarball.close()

    os.chdir(save_curdir)

tarball_suffix = ".tar.gz"
tarball_name = "{dir_name}{suffix}".format(
        dir_name=export_dir_name, suffix=tarball_suffix)
parent_dir = os.path.dirname(os.path.abspath(os.path.curdir))
tarball_path = os.path.join(parent_dir, tarball_name)
make_dist_tarball(tarball_path, export_root_dir)


shutil.rmtree(export_root_dir)


# Local variables:
# coding: utf-8
# mode: python
# End:
# vim: fileencoding=utf-8 filetype=python :
